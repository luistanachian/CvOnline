@page "/countries"

@using Cv.Models
@using Cv.Models.Enums
@using Cv.Models.Helpers
@using Cv.UI.Data
@inject CountriesService countriesService


<h1>Countries</h1>

<p>This component demonstrates fetching data from a service.</p>


<p>
    <input @bind="Page" /> Current value: @Page
</p>

<select @bind="PageSize">
    <option selected="selected" value="@PageSizeEnum._25">@PageSizeEnum._25.ToString().Remove(0,1)</option>
    <option selected="selected" value="@PageSizeEnum._50">@PageSizeEnum._50.ToString().Remove(0, 1)</option>
    <option selected="selected" value="@PageSizeEnum._100">@PageSizeEnum._100.ToString().Remove(0, 1)</option>
</select>

<button class="btn btn-primary" @onclick="ObtenerPaises">Buscar</button>


@if (countries == null)
{
    <p><em>Loading...</em></p>
}
else
{

<p>Count: @countries.Count</p>
<p>Pages: @countries.Pages</p>

    <table class="table">
        <thead>
            <tr>
                <th>id</th>
                <th>name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var country in countries.List)
            {
                <tr>
                    <td>@country.id</td>
                    <td>@country.name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private PagedListModel<CountryModel> countries;
    public int Page { get; set; } = 1;
    public PageSizeEnum PageSize { get; set; }

    protected async Task ObtenerPaises()
    {
        countries = await countriesService.GetCountriesAsync(Page, PageSize);
    }
}